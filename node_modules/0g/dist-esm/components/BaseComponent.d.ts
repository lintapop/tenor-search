/// <reference types="node" />
import { EventEmitter } from 'events';
import { Poolable } from '../internal/objectPool';
export declare interface BaseComponent {
    on(event: 'change', callback: () => void): this;
    off(event: 'change', callback: () => void): this;
}
export declare class BaseComponent extends EventEmitter implements Poolable {
    static kind: string;
    static defaultValues: any;
    static builtinKeys: string[];
    static id: number;
    __alive: boolean;
    ___version: number;
    __type: number;
    constructor();
    get type(): number;
    get __version(): number;
    set<T extends BaseComponent>(this: T, values: Partial<T>): void;
    mark(): void;
    reset: () => void;
}
